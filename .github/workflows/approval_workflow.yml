name: Handle Test Approvals

on:
  issue_comment:
    types: [created]
  pull_request_review:
    types: [submitted]

jobs:
  handle-test-approval:
    if: |
      (github.event_name == 'issue_comment' && github.event.issue.pull_request &&
        (contains(github.event.comment.body, '/approve tests') ||
         contains(github.event.comment.body, '/regenerate tests'))) ||
      (github.event_name == 'pull_request_review' && github.event.review.state == 'approved')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout PR code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref || github.head_ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check for approval type
        id: check_approval
        run: |
          if [[ "${{ github.event_name }}" == "pull_request_review" ]]; then
            echo "action=approve" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.comment.body }}" == *"/approve tests"* ]]; then
            echo "action=approve" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.comment.body }}" == *"/regenerate tests"* ]]; then
            echo "action=regenerate" >> $GITHUB_OUTPUT
            requirements=$(echo "${{ github.event.comment.body }}" | sed -n 's/.*\/regenerate tests with \(.*\)/\1/p')
            echo "requirements=$requirements" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "workflow_run" ]]; then
            echo "action=check_suggestions" >> $GITHUB_OUTPUT
          fi

      - name: Fetch test suggestions branch
        if: steps.check_approval.outputs.action == 'check_suggestions'
        run: |
          suggestion_branch="test-suggestions-${GITHUB_HEAD_REF}"
          if git fetch origin $suggestion_branch; then
            git checkout $suggestion_branch
            echo "suggestions_exist=true" >> $GITHUB_ENV
          else
            echo "suggestions_exist=false" >> $GITHUB_ENV
          fi

      - name: Apply approved tests
        if: steps.check_approval.outputs.action == 'approve' && env.suggestions_exist == 'true'
        run: |
          # Configure Git
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          # Stage all changes from the suggestions branch
          git add .

          # Commit and push changes
          git commit -m "Apply approved tests"
          git push origin HEAD:${{ github.event.pull_request.head.ref || github.head_ref }}

      - name: Comment when no suggestions exist
        if: steps.check_approval.outputs.action == 'approve' && env.suggestions_exist != 'true'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.name,
              issue_number: context.issue.number,
              body: 'No test suggestions were found to apply. Please regenerate tests first.'
            })

      - name: Regenerate tests
        if: steps.check_approval.outputs.action == 'regenerate'
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          # Run test generation with requirements if provided
          if [[ -n "${{ steps.check_approval.outputs.requirements }}" ]]; then
            node .github/scripts/generate-tests.js "${{ steps.check_approval.outputs.requirements }}"
          else
            node .github/scripts/generate-tests.js
          fi

          # Stage and check for generated tests
          git add .
          if git diff --cached --quiet; then
            echo "No new tests were generated"
            exit 0
          fi

          # Configure Git
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          # Create and push to suggestions branch
          suggestion_branch="test-suggestions-${GITHUB_HEAD_REF}"
          git checkout -b $suggestion_branch
          git commit -m "Save regenerated test suggestions"
          git push -f origin $suggestion_branch

          # Create comment with suggestions
          node .github/scripts/create-test-comment.js